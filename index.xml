<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>About on Tiffany Chieu</title>
    <link>https://tchieu.com/</link>
    <description>Recent content in About on Tiffany Chieu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 04 Dec 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://tchieu.com/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Optimizing image processing in Rust with SIMD intrinsics</title>
      <link>https://tchieu.com/blog/2021/12/04/simd/</link>
      <pubDate>Sat, 04 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://tchieu.com/blog/2021/12/04/simd/</guid>
      <description>Single instruction, multiple data (SIMD) intrinsics allow us to vectorize operations that would otherwise occur sequentially. This can greatly speed up a series of simple, repetitive operations that might be normally executed using loops. One place such operations are commonly found is in image processing.
For example, let&amp;rsquo;s say we want to write a function that increases the brightness of an image. We can do that by simply adding a value to each channel in the image.</description>
    </item>
    
    <item>
      <title>Books List</title>
      <link>https://tchieu.com/books/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tchieu.com/books/</guid>
      <description>Non-fiction The Idea Factory, by Jon Gertner In Search of Schrodinger&#39;s Cat, by John Gribbin A Brief History of Time, by Stephen Hawking Crystal Fire, by Michael Riordan and Lillian Hoddeson The Soul of a New Machine, by Tracy Kidder Dark Sun, by Richard Rhodes    Fiction The Hitchhiker&#39;s Guide to the Galaxy, by Douglas Adams Ender&#39;s Game, by Orson Scott Card All the Light We Cannot See, by Anthony Doerr Les Miserables, by Victor Hugo Flowers for Algernon, by Daniel Keyes The Art of Racing in the Rain, by Garth Stein The Martian, by Andy Weir The War of the Worlds, by H.</description>
    </item>
    
    <item>
      <title>imgproc-rs</title>
      <link>https://tchieu.com/projects/imgproc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tchieu.com/projects/imgproc/</guid>
      <description>Repository  Crates.io  Documentation       This image processing library provides a flexible container for storing and manipulating different image formats and channel data types, and supports the following types of image operations:  Color space conversions between sRGB, HSV, CIE XYZ, and CIELAB Brightness, contrast, and saturation adjustments Gamma correction and histogram equalization Linear filtering through convolution Nonlinear filters such as the median, bilateral, and alpha-trimmed mean filters Basic affine transformations Morphological operations   In addition, this library supports multithreading for some transformation functions and most filter functions via rayon.</description>
    </item>
    
    <item>
      <title>Resume</title>
      <link>https://tchieu.com/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tchieu.com/resume/</guid>
      <description>  </description>
    </item>
    
    <item>
      <title>space-invaders</title>
      <link>https://tchieu.com/projects/space-invaders/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tchieu.com/projects/space-invaders/</guid>
      <description>Repository       For this project, I implemented a version of the arcade game Space Invaders in Verilog using a Nexys3 Spartan 6 FPGA board. The game consists of:  A player, which can be moved left and right across the bottom of the screen A laser, which can be shot upwards from the player&#39;s laser base A 5x11 grid of invaders that continuously moves left and right across the middle of the screen 3 missiles, which the invaders somewhat randomly shoot down towards the player  Initial game state</description>
    </item>
    
    <item>
      <title>TI-RSLK Path Follower</title>
      <link>https://tchieu.com/projects/rslk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tchieu.com/projects/rslk/</guid>
      <description>The goal of this project was to develop a path-following car based on the TI-RSLK car platform using a series of IR sensors and a PID controller. Code for the path-following system can be found here, and code for the basic Arduino PID controller that was used can be found here.  The path-following system began with an auto-calibration routine in which the car was placed over a white area, followed by a black area, from which minimum and maximum values were calibrated for each sensor.</description>
    </item>
    
    <item>
      <title>VulcaNet</title>
      <link>https://tchieu.com/projects/vulcanet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://tchieu.com/projects/vulcanet/</guid>
      <description>Created by: Tiffany Chieu, Nashir Janmohamed, Justin Lin, and Ariel Young
Awards: Best IoT that Incorporates Multiple Nodes, San Diego Hackathon 2019
Repository  Devpost       The goal of this project is to provide a reliable, low-cost early detection system for wildfires. VulcaNet is an extensible IoT mesh network that aggregates environmental sensor data from various locations within a given area, such as ambient temperature, humidity, barometric pressure, and carbon dioxide air content.</description>
    </item>
    
  </channel>
</rss>
